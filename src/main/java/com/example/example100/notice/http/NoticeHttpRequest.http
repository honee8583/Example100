### 6. "공지사항입니다."를 리턴하는 api
GET http://localhost:8080/api/notice

### 7. 공지사항 게시판의 내용을 추상화한 모델을 리턴하는 api
GET http://localhost:8080/api/notice2

### 8. 공지사항 게시판의 내용을 추상화한 모델을 리턴하는 api
GET http://localhost:8080/api/notice3

### 9. 빈 공지사항 리스트를 반환하는 api
GET http://localhost:8080/api/notice4

### 10. 공지사항 게시판 데이터의 총 개수를 반환하는 api
GET http://localhost:8080/api/notice/count

### 11. 공지사항에 글을 등록하기 위한 api를 작성하시오.
POST http://localhost:8080/api/notice
Content-Type: application/x-www-form-urlencoded

title=공지사항 제목입니다&content=공지사항 내용입니다.

### 12. 공지사항에 글을 등록하기 위한 api를 작성하시오.
POST http://localhost:8080/api/notice2
Content-Type: application/x-www-form-urlencoded

title=공지사항 제목입니다.&content=공지사항 내용입니다.

### 13. 공지사항에 글을 등록하기 위한 api를 작성하시오.
POST http://localhost:8080/api/notice3
Content-Type: application/json

{
  "title": "공지사항 제목입니다3.",
  "content": "공지사항 내용입니다3."
}

### 14. 공지사항 글을 데이터베이스에 저장하는 api를 작성하시오.
POST http://localhost:8080/api/notice4
Content-Type: application/json

{
  "title": "공지사항 제목입니다4",
  "content": "공지사항 내용입니다4"
}

### 15. 공지사항 글을 데이터베이스에 저장하는 api를 작성하시오.
POST http://localhost:8080/api/notice5
Content-Type: application/json

{
  "title": "공지사항 제목입니다5",
  "content": "공지사항 내용입니다5"
}

### 16. 공지사항 글을 수정하기 위해 상세정보를 요청하는 api를 작성하시오.
GET http://localhost:8080/api/notice/1

### 17. 공지사항 글을 수정하기 위한 api를 작성하시오.
PUT http://localhost:8080/api/notice/1
Content-Type: application/json

{
  "title": "수정된 제목입니다.",
  "content": "수정된 내용입니다."
}