### 31-1. 사용자 등록시 입력값이 유효하지 않은 경우 예외를 발생시키는 기능을 작성하시오.
POST http://localhost:8080/api/user
Content-Type: application/json

{
  "email": "email@naver.com",
  "userName": "user",
  "password": "1111",
  "phone": "010-1234-5678"
}

### 31-2. 에러가 발생하는 경우
POST http://localhost:8080/api/user
Content-Type: application/json

{
  "email": "",
  "userName": "",
  "password": "",
  "phone": ""
}

### 32. 사용자 정보를 입력받아서 저장하는 api를 작성하시오.
POST http://localhost:8080/api/user2
Content-Type: application/json

{
  "email": "email@naver.com",
  "userName": "user",
  "password": "1111",
  "phone": "010-1234-5678"
}

### 33. 사용자 정보를 수정하는 api를 작성하시오.
PUT http://localhost:8080/api/user/4
Content-Type: application/json

{
  "phone": "010-9876-5432"
}

### 34. 사용자 정보를 조회하는 api를 작성하시오.
GET http://localhost:8080/api/user/3

### 35. 본인이 작성한 공지사항 목록을 제공하는 api를 작성하시오.
GET http://localhost:8080/api/user/1/notice

### 36. 사용자 등록시 이미 존재하는 이메일인경우 예외를 발생시키는 api를 작성하시오.
POST http://localhost:8080/api/user3
Content-Type: application/json

{
  "email": "user1@gmail.com",
  "userName": "user1",
  "password": "1111",
  "phone": "010-1234-5678"
}

### 37. 사용자의 비밀번호 수정 기능을 제공하는 api를 작성하시오.
PATCH http://localhost:8080/api/user/1/password
Content-Type: application/json

{
  "password": "1111",
  "newPassword": "2222"
}

### 38. 사용자의 비밀번호를 암호화해 저장하는 api를 작성하시오.
POST http://localhost:8080/api/user4
Content-Type: application/json

{
  "email": "user5@gmail.com",
  "userName": "user5",
  "password": "1111",
  "phone": "010-1234-5678"
}

### 39. 회원탈퇴에 대한 api를 작성하시오.
DELETE http://localhost:8080/api/user/1

### 40. 사용자 아이디를 찾는 api를 작성하시오.
GET http://localhost:8080/api/user5
Content-Type: application/json

 {
   "userName": "user1",
   "phone": "010-1234-5678"
 }

### 41. 사용자의 비밀번호 초기화를 요청하는 api를 작성하시오.
GET http://localhost:8080/api/user/1/password/reset